2021-03-18 18:40:39.565 [DEBUG] [background-preinit] [36mLoggerProviders.logProvider(LoggerProviders.java:152)[m - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-03-18 18:40:39.912 [INFO ] [restartedMain] [36mStartupInfoLogger.logStarting(StartupInfoLogger.java:55)[m - Starting ProEjcicEtchWebApplication on LAPTOP-M8LIP8PU with PID 22100 (C:\company\ForSCS Bank workspace\ProEJCIC_ETCH_Web\bin\main started by user in C:\company\ForSCS Bank workspace\ProEJCIC_ETCH_Web)
2021-03-18 18:40:39.941 [DEBUG] [restartedMain] [36mStartupInfoLogger.logStarting(StartupInfoLogger.java:56)[m - Running with Spring Boot v2.3.6.RELEASE, Spring v5.2.11.RELEASE
2021-03-18 18:40:39.950 [INFO ] [restartedMain] [36mSpringApplication.logStartupProfileInfo(SpringApplication.java:655)[m - The following profiles are active: sit
2021-03-18 18:40:45.994 [INFO ] [restartedMain] [36mEnableEncryptablePropertiesBeanFactoryPostProcessor.postProcessBeanFactory(EnableEncryptablePropertiesBeanFactoryPostProcessor.java:48)[m - Post-processing PropertySource instances
2021-03-18 18:40:46.156 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-03-18 18:40:46.157 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-03-18 18:40:46.158 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-03-18 18:40:46.159 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-03-18 18:40:46.160 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-03-18 18:40:46.161 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-03-18 18:40:46.161 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource applicationConfig: [classpath:/application-sit.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-03-18 18:40:46.162 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-03-18 18:40:46.162 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-03-18 18:40:46.315 [INFO ] [restartedMain] [36mDefaultLazyPropertyFilter.lambda$null$2(DefaultLazyPropertyFilter.java:34)[m - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-03-18 18:40:47.982 [INFO ] [restartedMain] [36mDefaultLazyPropertyResolver.lambda$null$2(DefaultLazyPropertyResolver.java:35)[m - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-03-18 18:40:47.994 [INFO ] [restartedMain] [36mDefaultLazyPropertyDetector.lambda$null$2(DefaultLazyPropertyDetector.java:33)[m - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-03-18 18:40:56.108 [INFO ] [restartedMain] [36mDirectJDKLog.log(DirectJDKLog.java:173)[m - Initializing ProtocolHandler ["http-nio-8080"]
2021-03-18 18:40:58.334 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.lambda$null$2(DefaultLazyEncryptor.java:37)[m - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-03-18 18:40:58.433 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-03-18 18:40:58.435 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-03-18 18:40:58.443 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-03-18 18:40:58.445 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-03-18 18:40:58.447 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-03-18 18:40:58.451 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.iv-generator-classname, using default value: org.jasypt.iv.NoIvGenerator
2021-03-18 18:40:58.455 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-03-18 18:41:05.847 [ERROR] [restartedMain] [36mHikariPool.throwPoolInitializationException(HikariPool.java:593)[m - EJCICWebHikariCP - Exception during pool initialization.
org.postgresql.util.PSQLException: FATAL: password authentication failed for user "jcicdbuser"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:613)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:161)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:213)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:51)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:225)
	at org.postgresql.Driver.makeConnection(Driver.java:465)
	at org.postgresql.Driver.connect(Driver.java:264)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1781)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1525)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1265)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:714)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:714)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.pro.jcic.ProEjcicEtchWebApplication.main(ProEjcicEtchWebApplication.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2021-03-18 18:41:10.921 [DEBUG] [restartedMain] [36mGenericFilterBean.init(GenericFilterBean.java:242)[m - Filter 'customAuthenticationFilter' configured for use
2021-03-18 18:41:18.365 [INFO ] [restartedMain] [36mDirectJDKLog.log(DirectJDKLog.java:173)[m - Starting ProtocolHandler ["http-nio-8080"]
2021-03-18 18:41:18.470 [INFO ] [restartedMain] [36mStartupInfoLogger.logStarted(StartupInfoLogger.java:61)[m - Started ProEjcicEtchWebApplication in 40.173 seconds (JVM running for 43.374)
2021-03-18 18:41:27.755 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:50)[m - 地址 : http://127.0.0.1:8080/EJCIC/error
2021-03-18 18:41:27.755 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:51)[m - 請求方式 : GET
2021-03-18 18:41:27.756 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:52)[m - IP : 127.0.0.1
2021-03-18 18:41:27.759 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:53)[m - 執行的方法 : com.pro.jcic.controller.error.WebErrorController.handleError
2021-03-18 18:41:27.759 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:55)[m - 引數 : 
2021-03-18 18:41:27.765 [DEBUG] [http-nio-8080-exec-1] [36mWebErrorController.handleError(WebErrorController.java:36)[m - Status Code = 403
2021-03-18 18:41:27.831 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:81)[m - 返回內容 : common/error-403
2021-03-18 18:41:27.831 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:86)[m - 花費時間 : 77毫秒
2021-03-18 18:41:32.244 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:50)[m - 地址 : http://127.0.0.1:8080/EJCIC/error
2021-03-18 18:41:32.244 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:51)[m - 請求方式 : GET
2021-03-18 18:41:32.245 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:52)[m - IP : 127.0.0.1
2021-03-18 18:41:32.245 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:53)[m - 執行的方法 : com.pro.jcic.controller.error.WebErrorController.handleError
2021-03-18 18:41:32.245 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doBefore(WebLogAspect.java:55)[m - 引數 : 
2021-03-18 18:41:32.245 [DEBUG] [http-nio-8080-exec-1] [36mWebErrorController.handleError(WebErrorController.java:36)[m - Status Code = 403
2021-03-18 18:41:32.246 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:81)[m - 返回內容 : common/error-403
2021-03-18 18:41:32.246 [INFO ] [http-nio-8080-exec-1] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:86)[m - 花費時間 : 2毫秒
2021-03-18 18:41:33.394 [INFO ] [http-nio-8080-exec-4] [36mWebLogAspect.doBefore(WebLogAspect.java:50)[m - 地址 : http://127.0.0.1:8080/EJCIC/error
2021-03-18 18:41:33.394 [INFO ] [http-nio-8080-exec-4] [36mWebLogAspect.doBefore(WebLogAspect.java:51)[m - 請求方式 : GET
2021-03-18 18:41:33.395 [INFO ] [http-nio-8080-exec-4] [36mWebLogAspect.doBefore(WebLogAspect.java:52)[m - IP : 127.0.0.1
2021-03-18 18:41:33.395 [INFO ] [http-nio-8080-exec-4] [36mWebLogAspect.doBefore(WebLogAspect.java:53)[m - 執行的方法 : com.pro.jcic.controller.error.WebErrorController.handleError
2021-03-18 18:41:33.395 [INFO ] [http-nio-8080-exec-4] [36mWebLogAspect.doBefore(WebLogAspect.java:55)[m - 引數 : 
2021-03-18 18:41:33.396 [DEBUG] [http-nio-8080-exec-4] [36mWebErrorController.handleError(WebErrorController.java:36)[m - Status Code = 403
2021-03-18 18:41:33.396 [INFO ] [http-nio-8080-exec-4] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:81)[m - 返回內容 : common/error-403
2021-03-18 18:41:33.397 [INFO ] [http-nio-8080-exec-4] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:86)[m - 花費時間 : 2毫秒
2021-03-18 18:41:44.739 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:50)[m - 地址 : http://127.0.0.1:8080/EJCIC/error
2021-03-18 18:41:44.739 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:51)[m - 請求方式 : GET
2021-03-18 18:41:44.740 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:52)[m - IP : 127.0.0.1
2021-03-18 18:41:44.740 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:53)[m - 執行的方法 : com.pro.jcic.controller.error.WebErrorController.handleError
2021-03-18 18:41:44.740 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:55)[m - 引數 : 
2021-03-18 18:41:44.740 [DEBUG] [http-nio-8080-exec-2] [36mWebErrorController.handleError(WebErrorController.java:36)[m - Status Code = 403
2021-03-18 18:41:44.741 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:81)[m - 返回內容 : common/error-403
2021-03-18 18:41:44.741 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:86)[m - 花費時間 : 2毫秒
2021-03-18 18:42:07.441 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:50)[m - 地址 : http://127.0.0.1:8080/EJCIC/error
2021-03-18 18:42:07.441 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:51)[m - 請求方式 : GET
2021-03-18 18:42:07.442 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:52)[m - IP : 127.0.0.1
2021-03-18 18:42:07.442 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:53)[m - 執行的方法 : com.pro.jcic.controller.error.WebErrorController.handleError
2021-03-18 18:42:07.442 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doBefore(WebLogAspect.java:55)[m - 引數 : 
2021-03-18 18:42:07.443 [DEBUG] [http-nio-8080-exec-2] [36mWebErrorController.handleError(WebErrorController.java:36)[m - Status Code = 403
2021-03-18 18:42:07.443 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:81)[m - 返回內容 : common/error-403
2021-03-18 18:42:07.444 [INFO ] [http-nio-8080-exec-2] [36mWebLogAspect.doAfterReturning(WebLogAspect.java:86)[m - 花費時間 : 3毫秒
2021-03-18 18:42:50.244 [DEBUG] [background-preinit] [36mLoggerProviders.logProvider(LoggerProviders.java:152)[m - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-03-18 18:42:50.340 [INFO ] [restartedMain] [36mStartupInfoLogger.logStarting(StartupInfoLogger.java:55)[m - Starting ProEjcicEtchWebApplication on LAPTOP-M8LIP8PU with PID 24044 (C:\company\ForSCS Bank workspace\ProEJCIC_ETCH_Web\bin\main started by user in C:\company\ForSCS Bank workspace\ProEJCIC_ETCH_Web)
2021-03-18 18:42:50.345 [DEBUG] [restartedMain] [36mStartupInfoLogger.logStarting(StartupInfoLogger.java:56)[m - Running with Spring Boot v2.3.6.RELEASE, Spring v5.2.11.RELEASE
2021-03-18 18:42:50.346 [INFO ] [restartedMain] [36mSpringApplication.logStartupProfileInfo(SpringApplication.java:655)[m - The following profiles are active: sit
2021-03-18 18:42:53.974 [INFO ] [restartedMain] [36mEnableEncryptablePropertiesBeanFactoryPostProcessor.postProcessBeanFactory(EnableEncryptablePropertiesBeanFactoryPostProcessor.java:48)[m - Post-processing PropertySource instances
2021-03-18 18:42:54.122 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-03-18 18:42:54.123 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-03-18 18:42:54.123 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-03-18 18:42:54.123 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-03-18 18:42:54.124 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-03-18 18:42:54.124 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-03-18 18:42:54.125 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource applicationConfig: [classpath:/application-sit.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-03-18 18:42:54.125 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-03-18 18:42:54.125 [INFO ] [restartedMain] [36mEncryptablePropertySourceConverter.makeEncryptable(EncryptablePropertySourceConverter.java:41)[m - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-03-18 18:42:54.218 [INFO ] [restartedMain] [36mDefaultLazyPropertyFilter.lambda$null$2(DefaultLazyPropertyFilter.java:34)[m - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-03-18 18:42:54.920 [INFO ] [restartedMain] [36mDefaultLazyPropertyResolver.lambda$null$2(DefaultLazyPropertyResolver.java:35)[m - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-03-18 18:42:54.927 [INFO ] [restartedMain] [36mDefaultLazyPropertyDetector.lambda$null$2(DefaultLazyPropertyDetector.java:33)[m - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-03-18 18:42:56.697 [INFO ] [restartedMain] [36mDirectJDKLog.log(DirectJDKLog.java:173)[m - Initializing ProtocolHandler ["http-nio-8080"]
2021-03-18 18:42:57.321 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.lambda$null$2(DefaultLazyEncryptor.java:37)[m - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-03-18 18:42:57.360 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-03-18 18:42:57.362 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-03-18 18:42:57.364 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-03-18 18:42:57.365 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-03-18 18:42:57.368 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-03-18 18:42:57.372 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.iv-generator-classname, using default value: org.jasypt.iv.NoIvGenerator
2021-03-18 18:42:57.376 [INFO ] [restartedMain] [36mDefaultLazyEncryptor.getProperty(DefaultLazyEncryptor.java:91)[m - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-03-18 18:43:01.360 [ERROR] [restartedMain] [36mHikariPool.throwPoolInitializationException(HikariPool.java:593)[m - EJCICWebHikariCP - Exception during pool initialization.
org.postgresql.util.PSQLException: FATAL: password authentication failed for user "jcicdbuser"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:613)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:161)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:213)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:51)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:225)
	at org.postgresql.Driver.makeConnection(Driver.java:465)
	at org.postgresql.Driver.connect(Driver.java:264)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:227)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1781)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1525)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1378)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1265)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:714)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:714)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:408)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:255)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:229)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(Unknown Source)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:440)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:178)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:158)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.pro.jcic.ProEjcicEtchWebApplication.main(ProEjcicEtchWebApplication.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2021-03-18 18:43:06.829 [DEBUG] [restartedMain] [36mGenericFilterBean.init(GenericFilterBean.java:242)[m - Filter 'customAuthenticationFilter' configured for use
2021-03-18 18:43:17.591 [INFO ] [restartedMain] [36mDirectJDKLog.log(DirectJDKLog.java:173)[m - Starting ProtocolHandler ["http-nio-8080"]
2021-03-18 18:43:18.009 [INFO ] [restartedMain] [36mStartupInfoLogger.logStarted(StartupInfoLogger.java:61)[m - Started ProEjcicEtchWebApplication in 28.461 seconds (JVM running for 30.163)
